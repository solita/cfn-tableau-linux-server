AWSTemplateFormatVersion: '2010-09-09'

Description: 'AWS CloudFormation Template: Tableau Server running on Linux (Ubuntu).'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: AWS Environment and Machine Configuration
        Parameters:
          - VPCId
          - PublicSubnetId
          - InstanceType
          - KeyPairName
          - SourceCIDR
          - AMIId
      - Label:
          default: Secrets
        Parameters:
          - Username
          - Password
          - TableauServerAdminUser
          - TableauServerAdminPassword
      - Label:
          default: Registration
        Parameters:
          - AcceptEULA
          - TableauServerLicenseKey
          - RegFirstName
          - RegLastName
          - RegEmail
          - RegCompany
          - RegTitle
          - RegDepartment
          - RegIndustry
          - RegPhone
          - RegCity
          - RegState
          - RegZip
          - RegCountry
    ParameterLabels:
      AcceptEULA:
        default: Accept Tableau End User License Agreement
      InstanceType:
        default: Tableau Amazon EC2 instance type
      KeyPairName:
        default: Key Pair Name
      Password:
        default: Tableau Services Manager (TSM) administrator password
      PublicSubnetId:
        default: Target Public Subnet
      RegCity:
        default: City
      RegCompany:
        default: Company
      RegCountry:
        default: Country
      RegDepartment:
        default: Department
      RegEmail:
        default: Email Address
      RegFirstName:
        default: First Name
      RegIndustry:
        default: Industry
      RegLastName:
        default: Last Name
      RegPhone:
        default: Phone
      RegState:
        default: State
      RegTitle:
        default: Title
      RegZip:
        default: Zip/Postal Code
      SourceCIDR:
        default: Source CIDR for Access
      TableauServerAdminPassword:
        default: Tableau Server administrator password
      TableauServerAdminUser:
        default: Tableau Server administrator username
      TableauServerLicenseKey:
        default: Tableau Activation Key
      Username:
        default: Tableau Services Manager (TSM) administrator username
      VPCId:
        default: Target VPC
      AMIId:
        default: Id of linux image
Parameters:
  ServiceName:
    Description: Name of service
    Default: linux-tableau-server
    Type: String
  AcceptEULA:
    AllowedPattern: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
    Description: 'View the EULA at the Link: https://www.tableau.com/eula'
    Type: String
  InstanceType:
    AllowedValues:
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.4xlarge
      - m5.12xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: m4.4xlarge
    Description: Amazon EC2 instance type
    Type: String
  KeyPairName:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  Password:
    Description: Tableau Services Manager (TSM) administrator password
    MinLength: '6'
    NoEcho: 'true'
    Type: String
  PublicSubnetId:
    Description: The public subnet to use
    Type: AWS::EC2::Subnet::Id
  RegCity:
    Description: City
    Type: String
  RegCompany:
    Description: Company
    Type: String
  RegCountry:
    Description: Country
    Type: String
  RegDepartment:
    Description: Department
    Type: String
  RegEmail:
    Description: Email
    MinLength: '1'
    Type: String
  RegFirstName:
    Description: First Name
    MinLength: '1'
    Type: String
  RegIndustry:
    Description: Industry
    Type: String
  RegLastName:
    Description: Last Name
    MinLength: '1'
    Type: String
  RegPhone:
    Description: Phone
    Type: String
  RegState:
    Description: State
    Type: String
  RegTitle:
    Description: Title
    Type: String
  RegZip:
    Description: ZIP/Postal Code
    Type: String
  SourceCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR address from which you will connect to the instance
    Type: String
  TableauServerAdminPassword:
    Description: The password of the initial administrator for Tableau Server
    MinLength: '1'
    NoEcho: 'true'
    Type: String
  TableauServerAdminUser:
    Description: The name of the initial administrator for Tableau Server
    MinLength: '1'
    Type: String
  TableauServerLicenseKey:
    Description: License Key (leave blank for trial)
    Type: String
  Username:
    AllowedPattern: ^(?!(tableau|tsmagent|admin|root)$)[A-Za-z0-9]+$
    Description: Tableau Services Manager (TSM) administrator username (cannot be
      'tableau' or 'tsmagent' or 'admin' or 'root')
    MaxLength: '30'
    Type: String
  VPCId:
    Description: The ID of the VPC into which to deploy the cluster
    Type: AWS::EC2::VPC::Id
  AMIId:
    Description: The ID of the AMI image to build from
    Type: String
    Default: FindInMapping

Mappings:
  AWSAMIRegionMap:
    AMI:
      US1604HVM: ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20190628
    ap-northeast-1:
      US1604HVM: ami-018e83eeb86cbe915
    ap-northeast-2:
      US1604HVM: ami-025376d8670c1a73f
    ap-south-1:
      US1604HVM: ami-0979cb27961aadbf7
    ap-southeast-1:
      US1604HVM: ami-0216473266cb8902d
    ap-southeast-2:
      US1604HVM: ami-04dc124dae2db71ce
    ca-central-1:
      US1604HVM: ami-038c40a61ea4741d9
    eu-central-1:
      US1604HVM: ami-0e0104f9044920d13
    eu-north-1:
      US1604HVM: ami-0b47beea55400168b
    eu-west-1:
      US1604HVM: ami-0b508e9b54730f606
    eu-west-2:
      US1604HVM: ami-0a99b53e387548f98
    eu-west-3:
      US1604HVM: ami-0a5f39196a2cf5c4a
    sa-east-1:
      US1604HVM: ami-0b2044c8d1b29388f
    us-east-1:
      US1604HVM: ami-0bfb5f753b6c2d30b
    us-east-2:
      US1604HVM: ami-0bf3d772090752dc5
    us-west-1:
      US1604HVM: ami-086be1694c3196bfb
    us-west-2:
      US1604HVM: ami-06c94f9acb4ba21b2

  DefaultConfiguration:
    InstallationConfig:
      TableauServerInstaller: https://s3-us-west-2.amazonaws.com/tableau-quickstart/tableau-server_amd64.deb
      AutomatedInstaller: https://s3-us-west-2.amazonaws.com/tableau-quickstart/automated-installer
    MachineConfiguration:
      SystemVolumeSize: 100
      UbuntuVersion: US1604HVM

Conditions:
  IsTrial: !Equals
    - ''
    - !Ref 'TableauServerLicenseKey'
  UseDefaultAmi: !Equals
    - FindInMapping
    - !Ref AMIId
Resources:

  TableauServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            apt:
              awscli: []
          files:
            /home/ubuntu/.maintenance_env:
              content: !Sub |
                BUCKET_NAME=${ServiceName}-backups-${AWS::Region}
                USERNAME_SSM=${ServiceName}.user
                PASSWORD_SSM=${ServiceName}.password
            /etc/cron.d/maintenance:
              content: |
                0 0 * * * ubuntu bash /home/ubuntu/maintenance.bash >> /home/ubuntu/maintenance.log 2>&1
            /tmp/secrets.properties:
              mode: '640'
              content:
                !Sub |
                  tsm_admin_user='${Username}'
                  tsm_admin_pass='${Password}'
                  tableau_server_admin_user='${TableauServerAdminUser}'
                  tableau_server_admin_pass='${TableauServerAdminPassword}'
            /tmp/config.json:
              content:
                !Sub |
                  {"configEntities": {
                      "gatewaySettings": {
                          "_type": "gatewaySettingsType",
                          "port": 80,
                          "firewallOpeningEnabled": true,
                          "sslRedirectEnabled": true,
                          "publicHost": "localhost",
                          "publicPort": 80
                      },
                      "identityStore": {
                          "_type": "identityStoreType",
                          "type": "local"
                      }
                  }}
            /home/ubuntu/maintenance.bash:
              content: |
                #!/bin/bash
                source /etc/profile.d/tableau_server.sh
                source /home/ubuntu/.maintenance_env

                TODAY=`date '+%Y/%m/%d'`;
                USER=$(eval aws ssm get-parameter --name $USERNAME_SSM --with-decryption --region=eu-west-1 --query Parameter.Value);
                PASSWORD=$(eval aws ssm get-parameter --name $PASSWORD_SSM --with-decryption --region=eu-west-1 --query Parameter.Value);

                tsm login -u $USER -p $PASSWORD

                # logs
                tsm maintenance ziplogs -f tableau_logs.zip
                sudo aws s3 cp /var/opt/tableau/tableau_server/data/tabsvc/files/log-archives/tableau_logs.zip s3://$BUCKET_NAME/logs/$TODAY/tableau_logs.zip

                # logs cleanup
                tsm maintenance cleanup
                sudo rm /var/opt/tableau/tableau_server/data/tabsvc/files/log-archives/tableau_logs.zip

                # backup database
                tsm maintenance backup --file tableau_database
                sudo aws s3 cp /var/opt/tableau/tableau_server/data/tabsvc/files/backups/tableau_database.tsbak s3://$BUCKET_NAME/database/$TODAY/tableau_database.tsbak
                sudo rm "/var/opt/tableau/tableau_server/data/tabsvc/files/backups/tableau_database.tsbak"
    
                # backup settings
                tsm settings export -f tableau_settings.json
                sudo aws s3 cp tableau_settings.json s3://$BUCKET_NAME/settings/$TODAY/tableau_settings.json
                sudo rm tableau_settings.json

                tsm logout
            /tmp/tableau-server.deb:
              source: !FindInMap
                - DefaultConfiguration
                - InstallationConfig
                - TableauServerInstaller
            /tmp/automated-installer:
              mode: '550'
              source: !FindInMap
                - DefaultConfiguration
                - InstallationConfig
                - AutomatedInstaller
            /tmp/registration.json:
              content:
                first_name: !Ref 'RegFirstName'
                last_name: !Ref 'RegLastName'
                email: !Ref 'RegEmail'
                company: !Sub '${RegCompany};AWSQuickStart-Linux'
                title: !Ref 'RegTitle'
                department: !Ref 'RegDepartment'
                industry: !Ref 'RegIndustry'
                phone: !Ref 'RegPhone'
                city: !Ref 'RegCity'
                state: !Ref 'RegState'
                zip: !Ref 'RegZip'
                country: !Ref 'RegCountry'
    Properties:
      SecurityGroupIds:
        - !Ref 'ServerSecurityGroup'
      SubnetId: !Ref 'PublicSubnetId'
      InstanceType: !Ref 'InstanceType'
      IamInstanceProfile: !Ref Ec2TableauInstanceProfile
      ImageId: !If 
        - UseDefaultAmi
        - !FindInMap 
          - AWSAMIRegionMap 
          - !Ref AWS::Region
          - US1604HVM
        - !Ref AMIId
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: gp2
            VolumeSize: !FindInMap
              - DefaultConfiguration
              - MachineConfiguration
              - SystemVolumeSize
      EbsOptimized: true
      KeyName: !Ref 'KeyPairName'
      UserData: !Base64
        Fn::Sub:
        - |
            #!/bin/bash -xe
            exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
              # Update awscli       
              apt-get update
              apt-get install -y python-setuptools
       
              sudo apt-get -y install python3-pip
              pip3 install awscli --upgrade
              
              # Call Init
              /usr/bin/easy_install --script-dir /opt/aws/bin https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
              /opt/aws/bin/cfn-init --stack ${AWS::StackName} --resource TableauServer --region ${AWS::Region}
              # Various machine configs
              hostnamectl set-hostname $(hostnamectl --static)
              setup_sftp() {
                source '/tmp/secrets.properties'
                useradd -m "$tsm_admin_user"
                echo -e "$tsm_admin_pass\n$tsm_admin_pass" | passwd "$tsm_admin_user"
                
              }
              setup_sftp
              unset -f setup_sftp
              export LANG=en_US.UTF-8
              
              # Persist tsm credentials for maintenance job
              @aws ssm put-parameter --name ${ServiceName}.password --type SecureString --value $tsm_admin_pass --overwrite --region ${AWS::Region}
              aws ssm put-parameter --name ${ServiceName}.user --type SecureString --value $tsm_admin_user --overwrite --region ${AWS::Region}
              
              # Install Tableau Server
              install() {
                source '/tmp/secrets.properties'
                /tmp/automated-installer -a $tsm_admin_user -f /tmp/config.json -r /tmp/registration.json -s /tmp/secrets.properties ${LicenseString} -v --accepteula --force /tmp/tableau-server.deb
              }
              install
              unset -f install
              
              # Install snowflake connector
              LATEST_SNOWFLAKE_DEB=$(curl https://sfc-repo.snowflakecomputing.com/odbc/linux/latest/index.html | grep -oEi 'snowflake-odbc-.*\.deb<\/p>' | grep -oE 'snowflake-[[:alnum:]\d\._\-]*')
              wget https://sfc-repo.snowflakecomputing.com/odbc/linux/latest/$LATEST_SNOWFLAKE_DEB
              sudo dpkg -i $LATEST_SNOWFLAKE_DEB || true
              yes | sudo apt-get --assume-yes install -f 
              
              # Signal successful completion
              /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource TableauServer --region ${AWS::Region}
            
              # Cleanup
              
              rm -f /tmp/config.json
              rm -f /tmp/registration.json
              rm -f /tmp/secrets.properties
              rm -f /tmp/tableau-server.deb
              rm -f /tmp/automated-installer
        - LicenseString:
              Fn::If:
                  - IsTrial
                  - ''
                  - Fn::Sub: '-k ${TableauServerLicenseKey}'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-cfn-tableau-server-linux'
    CreationPolicy:
      ResourceSignal:
        Timeout: PT60M
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref 'TableauServer'
      Domain: 'vpc'
  
  ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'VPCId'
      GroupDescription: Enable HTTP access via port 80 and HTTPS access on port 8850,
        and SSH access from the provided network CIDR
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref SourceCIDR
        - IpProtocol: tcp
          FromPort: 8850
          ToPort: 8850
          CidrIp: !Ref SourceCIDR
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SourceCIDR

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ServiceName}-backups-${AWS::Region}

  Ec2TableauInstanceProfile:
      Type: AWS::IAM::InstanceProfile
      Properties:
        Roles: 
            - Ref: Ec2TableauRole

  Ec2TableauRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: BucketPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action: 's3:*'
              Resource: !Sub arn:aws:s3:::${ServiceName}-backups-${AWS::Region}/*
            - Effect: Allow
              Action: s3:ListBucket
              Resource: !Sub arn:aws:s3:::${ServiceName}-backups-${AWS::Region}
        - PolicyName: TableauKeyPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
                - ssm:DescribeParameter
                - ssm:PutParameter
              Resource:  
                - !Sub arn:aws:ssm:eu-west-1:${AWS::AccountId}:parameter/${ServiceName}.password
                - !Sub arn:aws:ssm:eu-west-1:${AWS::AccountId}:parameter/${ServiceName}.user
        - PolicyName: KeyDecryptionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action: kms:Decrypt
              Resource: "*"

Outputs:
  InstanceID:
    Description: EC2 InstanceID of the instance running Tableau Server
    Value: !Ref 'TableauServer'

  PublicIPAddress:
    Description: Public IP Address of instance running Tableau Server
    Value: !GetAtt 'TableauServer.PublicIp'
  
  TableauServicesManagerURL:
    Description: URL for the TSM Web UI
    Value: !Join
      - ''
      - - https://
        - !GetAtt 'TableauServer.PublicIp'
        - :8850/
  
  TableauServerURL:
    Description: URL for the Tableau Server
    Value: !Join
      - ''
      - - http://
        - !GetAtt 'TableauServer.PublicDnsName'
        - /
  
  SSH:
    Description: SSH to the Tableau Server instance using the keypair you provided
    Value: !Join
      - ''
      - - ubuntu@
        - !GetAtt 'TableauServer.PublicDnsName'